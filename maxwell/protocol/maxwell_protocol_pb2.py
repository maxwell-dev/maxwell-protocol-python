# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: maxwell_protocol.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16maxwell_protocol.proto\x12\x10maxwell.protocol\"\x1f\n\nping_req_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"\x1f\n\nping_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"=\n\npush_req_t\x12\r\n\x05topic\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\x11\n\tround_ref\x18\x0f \x01(\r\"\x1f\n\npush_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"w\n\npull_req_t\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\r\n\x05limit\x18\x03 \x01(\r\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"p\n\npull_rep_t\x12%\n\x04msgs\x18\x01 \x03(\x0b\x32\x17.maxwell.protocol.msg_t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"\x93\x01\n\treq_req_t\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0f\n\x07payload\x18\x02 \x01(\t\x12*\n\x06header\x18\x0c \x01(\x0b\x32\x1a.maxwell.protocol.header_t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"Y\n\treq_rep_t\x12\x0f\n\x07payload\x18\x01 \x01(\t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"X\n\nauth_req_t\x12\r\n\x05token\x18\x01 \x01(\t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"I\n\nauth_rep_t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"\x1d\n\x08ok_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"<\n\x0b\x65rror_rep_t\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0c\n\x04\x64\x65sc\x18\x02 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"H\n\tok2_rep_t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\"g\n\x0c\x65rror2_rep_t\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0c\n\x04\x64\x65sc\x18\x02 \x01(\t\x12\x12\n\nclient_ref\x18\r \x01(\r\x12\x14\n\x0c\x66rontend_ref\x18\x0e \x01(\r\x12\x11\n\tround_ref\x18\x0f \x01(\r\">\n\x17register_frontend_req_t\x12\x10\n\x08\x65ndpoint\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\",\n\x17register_frontend_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"=\n\x16register_backend_req_t\x12\x10\n\x08\x65ndpoint\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"+\n\x16register_backend_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"<\n\x15register_server_req_t\x12\x10\n\x08\x65ndpoint\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"*\n\x15register_server_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"4\n\x10\x61\x64\x64_routes_req_t\x12\r\n\x05paths\x18\x01 \x03(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"%\n\x10\x61\x64\x64_routes_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"7\n\x13\x64\x65lete_routes_req_t\x12\r\n\x05paths\x18\x01 \x03(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"(\n\x13\x64\x65lete_routes_rep_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"%\n\x10get_routes_req_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"P\n\x10get_routes_rep_t\x12)\n\x06routes\x18\x01 \x03(\x0b\x32\x19.maxwell.protocol.route_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"F\n\x11route_added_msg_t\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x10\n\x08\x65ndpoint\x18\x02 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"H\n\x13route_deleted_msg_t\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x10\n\x08\x65ndpoint\x18\x02 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"c\n\x1aroute_status_changed_msg_t\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x10\n\x08\x65ndpoint\x18\x02 \x01(\t\x12\x12\n\nis_healthy\x18\x03 \x01(\x08\x12\x11\n\tround_ref\x18\x0f \x01(\r\"*\n\x15\x61ssign_frontend_req_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"<\n\x15\x61ssign_frontend_rep_t\x12\x10\n\x08\x65ndpoint\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"6\n\x12locate_topic_req_t\x12\r\n\x05topic\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"9\n\x12locate_topic_rep_t\x12\x10\n\x08\x65ndpoint\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"%\n\x10resolve_ip_req_t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"1\n\x10resolve_ip_rep_t\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x11\n\tround_ref\x18\x0f \x01(\r\"9\n\x05msg_t\x12\x0e\n\x06offset\x18\x01 \x01(\x04\x12\r\n\x05value\x18\x02 \x01(\x0c\x12\x11\n\ttimestamp\x18\x03 \x01(\x04\"+\n\x08header_t\x12\r\n\x05\x61gent\x18\x01 \x01(\t\x12\x10\n\x08\x65ndpoint\x18\x02 \x01(\t\"=\n\x07route_t\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x10\n\x08\x65ndpoint\x18\x02 \x01(\t\x12\x12\n\nis_healthy\x18\x03 \x01(\x08*\x97\x05\n\nmsg_type_t\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08PING_REQ\x10\x01\x12\x0c\n\x08PING_REP\x10\x02\x12\x0c\n\x08PUSH_REQ\x10\x03\x12\x0c\n\x08PUSH_REP\x10\x04\x12\x0c\n\x08PULL_REQ\x10\x05\x12\x0c\n\x08PULL_REP\x10\x06\x12\x0b\n\x07REQ_REQ\x10\x07\x12\x0b\n\x07REQ_REP\x10\x08\x12\x0c\n\x08\x41UTH_REQ\x10\x1b\x12\x0c\n\x08\x41UTH_REP\x10\x1c\x12\n\n\x06OK_REP\x10\x1d\x12\r\n\tERROR_REP\x10\x1e\x12\x0b\n\x07OK2_REP\x10\x1f\x12\x0e\n\nERROR2_REP\x10 \x12\x19\n\x15REGISTER_FRONTEND_REQ\x10\x41\x12\x19\n\x15REGISTER_FRONTEND_REP\x10\x42\x12\x18\n\x14REGISTER_BACKEND_REQ\x10\x43\x12\x18\n\x14REGISTER_BACKEND_REP\x10\x44\x12\x17\n\x13REGISTER_SERVER_REQ\x10\x45\x12\x17\n\x13REGISTER_SERVER_REP\x10\x46\x12\x12\n\x0e\x41\x44\x44_ROUTES_REQ\x10[\x12\x12\n\x0e\x41\x44\x44_ROUTES_REP\x10\\\x12\x12\n\x0eGET_ROUTES_REQ\x10_\x12\x12\n\x0eGET_ROUTES_REP\x10`\x12\x13\n\x0fROUTE_ADDED_MSG\x10\x64\x12\x15\n\x11ROUTE_DELETED_MSG\x10\x65\x12\x1c\n\x18ROUTE_STATUS_CHANGED_MSG\x10\x66\x12\x17\n\x13\x41SSIGN_FRONTEND_REQ\x10o\x12\x17\n\x13\x41SSIGN_FRONTEND_REP\x10p\x12\x14\n\x10LOCATE_TOPIC_REQ\x10q\x12\x14\n\x10LOCATE_TOPIC_REP\x10r\x12\x12\n\x0eRESOLVE_IP_REQ\x10y\x12\x12\n\x0eRESOLVE_IP_REP\x10zb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'maxwell_protocol_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MSG_TYPE_T._serialized_start=2482
  _MSG_TYPE_T._serialized_end=3145
  _PING_REQ_T._serialized_start=44
  _PING_REQ_T._serialized_end=75
  _PING_REP_T._serialized_start=77
  _PING_REP_T._serialized_end=108
  _PUSH_REQ_T._serialized_start=110
  _PUSH_REQ_T._serialized_end=171
  _PUSH_REP_T._serialized_start=173
  _PUSH_REP_T._serialized_end=204
  _PULL_REQ_T._serialized_start=206
  _PULL_REQ_T._serialized_end=325
  _PULL_REP_T._serialized_start=327
  _PULL_REP_T._serialized_end=439
  _REQ_REQ_T._serialized_start=442
  _REQ_REQ_T._serialized_end=589
  _REQ_REP_T._serialized_start=591
  _REQ_REP_T._serialized_end=680
  _AUTH_REQ_T._serialized_start=682
  _AUTH_REQ_T._serialized_end=770
  _AUTH_REP_T._serialized_start=772
  _AUTH_REP_T._serialized_end=845
  _OK_REP_T._serialized_start=847
  _OK_REP_T._serialized_end=876
  _ERROR_REP_T._serialized_start=878
  _ERROR_REP_T._serialized_end=938
  _OK2_REP_T._serialized_start=940
  _OK2_REP_T._serialized_end=1012
  _ERROR2_REP_T._serialized_start=1014
  _ERROR2_REP_T._serialized_end=1117
  _REGISTER_FRONTEND_REQ_T._serialized_start=1119
  _REGISTER_FRONTEND_REQ_T._serialized_end=1181
  _REGISTER_FRONTEND_REP_T._serialized_start=1183
  _REGISTER_FRONTEND_REP_T._serialized_end=1227
  _REGISTER_BACKEND_REQ_T._serialized_start=1229
  _REGISTER_BACKEND_REQ_T._serialized_end=1290
  _REGISTER_BACKEND_REP_T._serialized_start=1292
  _REGISTER_BACKEND_REP_T._serialized_end=1335
  _REGISTER_SERVER_REQ_T._serialized_start=1337
  _REGISTER_SERVER_REQ_T._serialized_end=1397
  _REGISTER_SERVER_REP_T._serialized_start=1399
  _REGISTER_SERVER_REP_T._serialized_end=1441
  _ADD_ROUTES_REQ_T._serialized_start=1443
  _ADD_ROUTES_REQ_T._serialized_end=1495
  _ADD_ROUTES_REP_T._serialized_start=1497
  _ADD_ROUTES_REP_T._serialized_end=1534
  _DELETE_ROUTES_REQ_T._serialized_start=1536
  _DELETE_ROUTES_REQ_T._serialized_end=1591
  _DELETE_ROUTES_REP_T._serialized_start=1593
  _DELETE_ROUTES_REP_T._serialized_end=1633
  _GET_ROUTES_REQ_T._serialized_start=1635
  _GET_ROUTES_REQ_T._serialized_end=1672
  _GET_ROUTES_REP_T._serialized_start=1674
  _GET_ROUTES_REP_T._serialized_end=1754
  _ROUTE_ADDED_MSG_T._serialized_start=1756
  _ROUTE_ADDED_MSG_T._serialized_end=1826
  _ROUTE_DELETED_MSG_T._serialized_start=1828
  _ROUTE_DELETED_MSG_T._serialized_end=1900
  _ROUTE_STATUS_CHANGED_MSG_T._serialized_start=1902
  _ROUTE_STATUS_CHANGED_MSG_T._serialized_end=2001
  _ASSIGN_FRONTEND_REQ_T._serialized_start=2003
  _ASSIGN_FRONTEND_REQ_T._serialized_end=2045
  _ASSIGN_FRONTEND_REP_T._serialized_start=2047
  _ASSIGN_FRONTEND_REP_T._serialized_end=2107
  _LOCATE_TOPIC_REQ_T._serialized_start=2109
  _LOCATE_TOPIC_REQ_T._serialized_end=2163
  _LOCATE_TOPIC_REP_T._serialized_start=2165
  _LOCATE_TOPIC_REP_T._serialized_end=2222
  _RESOLVE_IP_REQ_T._serialized_start=2224
  _RESOLVE_IP_REQ_T._serialized_end=2261
  _RESOLVE_IP_REP_T._serialized_start=2263
  _RESOLVE_IP_REP_T._serialized_end=2312
  _MSG_T._serialized_start=2314
  _MSG_T._serialized_end=2371
  _HEADER_T._serialized_start=2373
  _HEADER_T._serialized_end=2416
  _ROUTE_T._serialized_start=2418
  _ROUTE_T._serialized_end=2479
# @@protoc_insertion_point(module_scope)
